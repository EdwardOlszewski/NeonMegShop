{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ed\\\\Desktop\\\\Websites\\\\NeonMegShop\\\\frontend\\\\src\\\\components\\\\PaymentForm.js\";\nimport React, { useEffect } from 'react';\nimport { Form, Button, ListGroup } from 'react-bootstrap';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { payOrder, cardCharge } from '../actions/orderActions';\nimport { ORDER_CHARGE_RESET } from '../constants/orderConstants';\nimport Loader from '../components/Loader';\n\nconst PaymentForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const dispatch = useDispatch();\n  const orderCharge = useSelector(state => state.orderCharge);\n  const {\n    loading,\n    success\n  } = orderCharge;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: orderPayLoading\n  } = orderPay;\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order\n  } = orderDetails;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      const {\n        id\n      } = paymentMethod;\n      var amount = parseInt(order.totalPrice * 100);\n      dispatch(cardCharge(id, amount, order._id));\n    }\n  };\n\n  useEffect(() => {\n    if (success) {\n      dispatch({\n        type: ORDER_CHARGE_RESET\n      });\n      dispatch(payOrder(order._id));\n    }\n  }, [dispatch, success, order._id]);\n  return /*#__PURE__*/React.createElement(Form, {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, loading || orderPayLoading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn-block\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Pay\"))));\n};\n\nexport default PaymentForm;","map":{"version":3,"sources":["C:/Users/Ed/Desktop/Websites/NeonMegShop/frontend/src/components/PaymentForm.js"],"names":["React","useEffect","Form","Button","ListGroup","CardElement","useStripe","useElements","useSelector","useDispatch","payOrder","cardCharge","ORDER_CHARGE_RESET","Loader","PaymentForm","stripe","elements","dispatch","orderCharge","state","loading","success","orderPay","orderPayLoading","orderDetails","order","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","amount","parseInt","totalPrice","_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Form, Button, ListGroup } from 'react-bootstrap'\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { payOrder, cardCharge } from '../actions/orderActions'\r\nimport { ORDER_CHARGE_RESET } from '../constants/orderConstants'\r\nimport Loader from '../components/Loader'\r\n\r\nconst PaymentForm = () => {\r\n  const stripe = useStripe()\r\n  const elements = useElements()\r\n  const dispatch = useDispatch()\r\n\r\n  const orderCharge = useSelector((state) => state.orderCharge)\r\n  const { loading, success } = orderCharge\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: orderPayLoading } = orderPay\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order } = orderDetails\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    })\r\n\r\n    if (!error) {\r\n      const { id } = paymentMethod\r\n      var amount = parseInt(order.totalPrice * 100)\r\n      dispatch(cardCharge(id, amount, order._id))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch({ type: ORDER_CHARGE_RESET })\r\n      dispatch(payOrder(order._id))\r\n    }\r\n  }, [dispatch, success, order._id])\r\n\r\n  return (\r\n    <Form id='payment-form' onSubmit={handleSubmit}>\r\n      {loading || orderPayLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          <ListGroup.Item>\r\n            <CardElement />\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            <Button type='button' className='btn-block' onClick={handleSubmit}>\r\n              Pay\r\n            </Button>\r\n          </ListGroup.Item>\r\n        </div>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PaymentForm\r\n"]},"metadata":{},"sourceType":"module"}