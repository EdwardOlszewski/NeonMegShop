{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ed\\\\Desktop\\\\Websites\\\\NeonMegShop\\\\frontend\\\\src\\\\screens\\\\OrderScreen2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getOrderDetails, deliverOrder } from '../actions/orderActions';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\nimport DateFormat from '../components/DateFormat';\nimport Meta from '../components/Meta';\n\nconst OrderScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  // Assign useDispatch hook to dispatch actions\n  const dispatch = useDispatch(); // get the orderID from th URL\n\n  const orderId = match.params.id; // Go to the orderDetails in the state and pull out information\n\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails; // Go to the orderPay in the state and pull out information\n\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay; // Go to the orderDeliver in the state and pull out information\n\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    success: successDeliver\n  } = orderDeliver; // Go to the userLogin in the state and pull out userInfo\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n\n  if (!loading) {\n    // Calculate prices\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n  } // useEffect hook to do something after render\n\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {}\n  }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo]);\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n    history.push('/admin/orderlist');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Meta, {\n    title: \"Order Summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, error) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '90%',\n      margin: 'auto',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    md: 12,\n    lg: 12,\n    xl: 7,\n    style: {\n      marginTop: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, \"Order Items\"), order.orderItems.length === 0 ? /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Order is empty\") : /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }), order.orderItems.map((item, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: item.image,\n    alt: item.name,\n    fluid: true,\n    rounded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 5,\n    style: {\n      marginTop: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/product/${item.product}`,\n    style: {\n      fontSize: '130%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 31\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(Col, {\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: '3rem',\n      fontSize: '130%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 31\n    }\n  }, item.qty, \" x $\", item.price, \" = $\", item.qty * item.price, ' '))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  }, ''))))), /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    md: 12,\n    lg: 8,\n    xl: 4,\n    style: {\n      textAlign: 'center',\n      margin: 'auto',\n      marginTop: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Order Summary\")), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 23\n    }\n  }, \"Order Number\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  }, order._id))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }\n  }, \"Items\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  }, \"$\", order.itemsPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 23\n    }\n  }, \"Tax\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }\n  }, \"$\", order.taxPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 23\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }\n  }, \"$\", order.totalPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, order.isPaid ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }, \"Paid on: \", ' ' + DateFormat(order.paidAt)) : /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }, \"Not Paid\")), /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }\n  }, \"Shipping\")), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, order.user.name))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, order.user.email))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, order.shippingAddress.address, \",\", ' ', order.shippingAddress.city, ' ', order.shippingAddress.postalCode, \",\", ' ', order.shippingAddress.country))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, order.isDelivered ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, \"Shipped on: \", ' ' + DateFormat(order.deliveredAt)) : /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, \"Not Shipped Yet\"))), !order.isPaid && /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, loadingPay && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 38\n    }\n  }), null ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)), loadingDeliver && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 38\n    }\n  }), userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-block\",\n    onClick: deliverHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, \"Mark As Delivered\"))))))));\n};\n\n_s(OrderScreen, \"TuP0ALtQiF4vXC8jLGoOPFphYEw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["C:/Users/Ed/Desktop/Websites/NeonMegShop/frontend/src/screens/OrderScreen2.js"],"names":["React","useEffect","Link","Row","Col","ListGroup","Image","Card","Button","useDispatch","useSelector","Message","Loader","getOrderDetails","deliverOrder","ORDER_PAY_RESET","ORDER_DELIVER_RESET","DateFormat","Meta","OrderScreen","match","history","dispatch","orderId","params","id","orderDetails","state","order","loading","error","orderPay","loadingPay","success","successPay","orderDeliver","loadingDeliver","successDeliver","userLogin","userInfo","addDecimals","num","Math","round","toFixed","itemsPrice","orderItems","reduce","acc","item","price","qty","push","_id","type","isPaid","deliverHandler","width","margin","textAlign","marginTop","length","map","index","image","name","product","fontSize","taxPrice","totalPrice","paidAt","user","email","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","isAdmin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,IAArC,EAA2CC,MAA3C,QAAyD,iBAAzD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,yBAA9C;AACA,SACEC,eADF,EAEEC,mBAFF,QAGO,6BAHP;AAIA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA;;AAC1C;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B,CAF0C,CAI1C;;AACA,QAAMc,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA7B,CAL0C,CAO1C;;AACA,QAAMC,YAAY,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BJ,YAAlC,CAT0C,CAW1C;;AACA,QAAMK,QAAQ,GAAGrB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACI,QAAlB,CAA5B;AACA,QAAM;AAAEF,IAAAA,OAAO,EAAEG,UAAX;AAAuBC,IAAAA,OAAO,EAAEC;AAAhC,MAA+CH,QAArD,CAb0C,CAe1C;;AACA,QAAMI,YAAY,GAAGzB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACQ,YAAlB,CAAhC;AACA,QAAM;AAAEN,IAAAA,OAAO,EAAEO,cAAX;AAA2BH,IAAAA,OAAO,EAAEI;AAApC,MAAuDF,YAA7D,CAjB0C,CAmB1C;;AACA,QAAMG,SAAS,GAAG5B,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACW,SAAlB,CAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,SAArB;;AAEA,MAAI,CAACT,OAAL,EAAc;AACZ;AACA,UAAMW,WAAW,GAAIC,GAAD,IAAS;AAC3B,aAAO,CAACC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,GAAjB,IAAwB,GAAzB,EAA8BG,OAA9B,CAAsC,CAAtC,CAAP;AACD,KAFD;;AAGAhB,IAAAA,KAAK,CAACiB,UAAN,GAAmBL,WAAW,CAC5BZ,KAAK,CAACkB,UAAN,CAAiBC,MAAjB,CAAwB,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACE,GAA/D,EAAoE,CAApE,CAD4B,CAA9B;AAGD,GA/ByC,CAiC1C;;;AACAlD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACsC,QAAL,EAAe;AACblB,MAAAA,OAAO,CAAC+B,IAAR,CAAa,QAAb;AACD;;AAED,QAAI,CAACxB,KAAD,IAAUM,UAAV,IAAwBG,cAAxB,IAA0CT,KAAK,CAACyB,GAAN,KAAc9B,OAA5D,EAAqE;AACnED,MAAAA,QAAQ,CAAC;AAAEgC,QAAAA,IAAI,EAAEvC;AAAR,OAAD,CAAR;AACAO,MAAAA,QAAQ,CAAC;AAAEgC,QAAAA,IAAI,EAAEtC;AAAR,OAAD,CAAR;AAEAM,MAAAA,QAAQ,CAACT,eAAe,CAACU,OAAD,CAAhB,CAAR;AACD,KALD,MAKO,IAAI,CAACK,KAAK,CAAC2B,MAAX,EAAmB,CACzB;AACF,GAZQ,EAYN,CAACjC,QAAD,EAAWC,OAAX,EAAoBW,UAApB,EAAgCG,cAAhC,EAAgDT,KAAhD,EAAuDP,OAAvD,EAAgEkB,QAAhE,CAZM,CAAT;;AAcA,QAAMiB,cAAc,GAAG,MAAM;AAC3BlC,IAAAA,QAAQ,CAACR,YAAY,CAACc,KAAD,CAAb,CAAR;AACAP,IAAAA,OAAO,CAAC+B,IAAR,CAAa,kBAAb;AACD,GAHD;;AAKA,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGvB,OAAO,gBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEJC,KAAK,gBACP,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,KAA3B,CADO,gBAGP;AAAK,IAAA,KAAK,EAAE;AAAE2B,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,MAAM,EAAE,MAAxB;AAAgCC,MAAAA,SAAS,EAAE;AAA3C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,CAAjC;AAAoC,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGhC,KAAK,CAACkB,UAAN,CAAiBe,MAAjB,KAA4B,CAA5B,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,gBAGC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGjC,KAAK,CAACkB,UAAN,CAAiBgB,GAAjB,CAAqB,CAACb,IAAD,EAAOc,KAAP,kBACpB,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEd,IAAI,CAACe,KADZ;AAEE,IAAA,GAAG,EAAEf,IAAI,CAACgB,IAFZ;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,OAAO,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,KAAK,EAAE;AAAEL,MAAAA,SAAS,EAAE;AAAb,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAG,YAAWX,IAAI,CAACiB,OAAQ,EAD/B;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGlB,IAAI,CAACgB,IAJR,CADF,CAVF,eAkBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AAAEL,MAAAA,SAAS,EAAE,MAAb;AAAqBO,MAAAA,QAAQ,EAAE;AAA/B,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGlB,IAAI,CAACE,GAHR,UAGiBF,IAAI,CAACC,KAHtB,UAIGD,IAAI,CAACE,GAAL,GAAWF,IAAI,CAACC,KAJnB,EAI0B,GAJ1B,CADF,CAlBF,CADF,CADD,CAFH,eAiCE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiB,EAAjB,CAjCF,CALJ,CADF,CADF,CADF,eA+CE,oBAAC,GAAD;AACE,IAAA,EAAE,EAAE,EADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,EAAE,EAAE,CAJN;AAKE,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE,QAAb;AAAuBD,MAAAA,MAAM,EAAE,MAA/B;AAAuCE,MAAAA,SAAS,EAAE;AAAlD,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAA2B,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,eAIE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM/B,KAAK,CAACyB,GAAZ,CAFF,CADF,CAJF,eAUE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOzB,KAAK,CAACiB,UAAb,CAFF,CADF,CAVF,eAgBE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOjB,KAAK,CAACwC,QAAb,CAFF,CADF,CAhBF,eAsBE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOxC,KAAK,CAACyC,UAAb,CAFF,CADF,CAtBF,eA4BE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzC,KAAK,CAAC2B,MAAN,gBACC,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACY,MAAMtC,UAAU,CAACW,KAAK,CAAC0C,MAAP,CAD5B,CADD,gBAKC,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CA5BF,eAsCE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAA2B,IAAA,KAAK,EAAE;AAAEX,MAAAA,SAAS,EAAE;AAAb,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAIE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM/B,KAAK,CAAC2C,IAAN,CAAWN,IAAjB,CAFF,CADF,CAJF,eAUE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMrC,KAAK,CAAC2C,IAAN,CAAWC,KAAjB,CAFF,CADF,CAVF,eAgBE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5C,KAAK,CAAC6C,eAAN,CAAsBC,OADzB,OACmC,GADnC,EAEG9C,KAAK,CAAC6C,eAAN,CAAsBE,IAFzB,EAE+B,GAF/B,EAGG/C,KAAK,CAAC6C,eAAN,CAAsBG,UAHzB,OAGsC,GAHtC,EAIGhD,KAAK,CAAC6C,eAAN,CAAsBI,OAJzB,CAFF,CADF,CAhBF,eA2BE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjD,KAAK,CAACkD,WAAN,gBACC,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACe,MAAM7D,UAAU,CAACW,KAAK,CAACmD,WAAP,CAD/B,CADD,gBAKC,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,CA3BF,CAtCF,EA4EG,CAACnD,KAAK,CAAC2B,MAAP,iBACC,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,UAAU,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEG,oBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,gBAAoB,yCAFvB,CA7EJ,EAkFGI,cAAc,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlFrB,EAmFGG,QAAQ,IACPA,QAAQ,CAACyC,OADV,IAECpD,KAAK,CAAC2B,MAFP,IAGC,CAAC3B,KAAK,CAACkD,WAHR,iBAIG,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,OAAO,EAAEtB,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAvFN,CADF,CAPF,CA/CF,CADF,CAPJ,CADF;AAyKD,CA9ND;;GAAMrC,W;UAEaV,W,EAMIC,W,EAIJA,W,EAIIA,W,EAIHA,W;;;KApBdS,W;AAgON,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, deliverOrder } from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\nimport DateFormat from '../components/DateFormat'\r\n\r\nimport Meta from '../components/Meta'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  // Assign useDispatch hook to dispatch actions\r\n  const dispatch = useDispatch()\r\n\r\n  // get the orderID from th URL\r\n  const orderId = match.params.id\r\n\r\n  // Go to the orderDetails in the state and pull out information\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  // Go to the orderPay in the state and pull out information\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  // Go to the orderDeliver in the state and pull out information\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  // Go to the userLogin in the state and pull out userInfo\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    // Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  // useEffect hook to do something after render\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo])\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n    history.push('/admin/orderlist')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title='Order Summary' />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <div style={{ width: '90%', margin: 'auto', textAlign: 'center' }}>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} xl={7} style={{ marginTop: '3rem' }}>\r\n              <ListGroup>\r\n                <ListGroup.Item>\r\n                  <h2>Order Items</h2>\r\n                  {order.orderItems.length === 0 ? (\r\n                    <Message>Order is empty</Message>\r\n                  ) : (\r\n                    <ListGroup variant='flush'>\r\n                      <ListGroup.Item></ListGroup.Item>\r\n                      {order.orderItems.map((item, index) => (\r\n                        <ListGroup.Item key={index}>\r\n                          <Row>\r\n                            <Col md={2}>\r\n                              <Image\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n\r\n                            <Col md={5} style={{ marginTop: '3rem' }}>\r\n                              <Link\r\n                                to={`/product/${item.product}`}\r\n                                style={{ fontSize: '130%' }}\r\n                              >\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n                            <Col md={5}>\r\n                              <p\r\n                                style={{ marginTop: '3rem', fontSize: '130%' }}\r\n                              >\r\n                                {item.qty} x ${item.price} = $\r\n                                {item.qty * item.price}{' '}\r\n                              </p>\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                      <ListGroup.Item>{''}</ListGroup.Item>\r\n                    </ListGroup>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col\r\n              sm={12}\r\n              md={12}\r\n              lg={8}\r\n              xl={4}\r\n              style={{ textAlign: 'center', margin: 'auto', marginTop: '3rem' }}\r\n            >\r\n              <Card>\r\n                <ListGroup variant='flush' style={{ textAlign: 'center' }}>\r\n                  <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Order Number</Col>\r\n                      <Col>{order._id}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>${order.itemsPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Tax</Col>\r\n                      <Col>${order.taxPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>${order.totalPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    {order.isPaid ? (\r\n                      <Message variant='success'>\r\n                        Paid on: {' ' + DateFormat(order.paidAt)}\r\n                      </Message>\r\n                    ) : (\r\n                      <Message variant='danger'>Not Paid</Message>\r\n                    )}\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup variant='flush' style={{ textAlign: 'center' }}>\r\n                    <ListGroup.Item>\r\n                      <h2>Shipping</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Name</Col>\r\n                        <Col>{order.user.name}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Email</Col>\r\n                        <Col>{order.user.email}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Address</Col>\r\n                        <Col>\r\n                          {order.shippingAddress.address},{' '}\r\n                          {order.shippingAddress.city}{' '}\r\n                          {order.shippingAddress.postalCode},{' '}\r\n                          {order.shippingAddress.country}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      {order.isDelivered ? (\r\n                        <Message variant='success'>\r\n                          Shipped on: {' ' + DateFormat(order.deliveredAt)}\r\n                        </Message>\r\n                      ) : (\r\n                        <Message variant='danger'>Not Shipped Yet</Message>\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n\r\n                  {!order.isPaid && (\r\n                    <ListGroup.Item>\r\n                      {loadingPay && <Loader />}\r\n                      {null ? <Loader /> : <></>}\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  {loadingDeliver && <Loader />}\r\n                  {userInfo &&\r\n                    userInfo.isAdmin &&\r\n                    order.isPaid &&\r\n                    !order.isDelivered && (\r\n                      <ListGroup.Item>\r\n                        <Button\r\n                          type='button'\r\n                          className='btn btn-block'\r\n                          onClick={deliverHandler}\r\n                        >\r\n                          Mark As Delivered\r\n                        </Button>\r\n                      </ListGroup.Item>\r\n                    )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n"]},"metadata":{},"sourceType":"module"}