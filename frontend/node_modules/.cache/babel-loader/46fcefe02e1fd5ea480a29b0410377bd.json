{"ast":null,"code":"import axios from 'axios';\nimport { REQUEST_CREATE_REQUEST, REQUEST_CREATE_SUCCESS, REQUEST_CREATE_FAIL, REQUEST_CHECK_REQUEST, REQUEST_CHECK_SUCCESS, REQUEST_CHECK_FAIL } from '../constants/requestConstants';\nexport const createRequest = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: REQUEST_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/requests`, product, user, config);\n    dispatch({\n      type: REQUEST_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: REQUEST_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const checkRequested = (productID, userID) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: REQUEST_CHECK_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/requests`, {\n      productID\n    }, userID, config);\n    dispatch({\n      type: REQUEST_CHECK_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: REQUEST_CHECK_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Ed/Desktop/Websites/NeonMegShop/frontend/src/actions/requestActions.js"],"names":["axios","REQUEST_CREATE_REQUEST","REQUEST_CREATE_SUCCESS","REQUEST_CREATE_FAIL","REQUEST_CHECK_REQUEST","REQUEST_CHECK_SUCCESS","REQUEST_CHECK_FAIL","createRequest","product","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","user","payload","error","message","response","checkRequested","productID","userID","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,sBADF,EAEEC,sBAFF,EAGEC,mBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,kBANF,QAOO,+BAPP;AASA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAIA,UAAM;AACJW,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,IAAN,CAAY,eAAZ,EAA4BX,OAA5B,EAAqCY,IAArC,EAA2CN,MAA3C,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET,sBADC;AAEPmB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAtBD,CAsBE,OAAOI,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBK,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBK,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAd,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,mBADC;AAEPkB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAjCM;AAmCP,OAAO,MAAME,cAAc,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB,OACnDlB,QADmD,EAEnDC,QAFmD,KAGhD;AACH,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAIA,UAAMU,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAAC4B,GAAN,CACpB,eADoB,EAErB;AAAEF,MAAAA;AAAF,KAFqB,EAGrBC,MAHqB,EAIrBb,MAJqB,CAAvB;AAOAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,qBADC;AAEPgB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAtBD,CAsBE,OAAOI,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBK,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBK,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAd,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEL,kBADC;AAEPe,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CApCM","sourcesContent":["import axios from 'axios'\r\nimport {\r\n  REQUEST_CREATE_REQUEST,\r\n  REQUEST_CREATE_SUCCESS,\r\n  REQUEST_CREATE_FAIL,\r\n  REQUEST_CHECK_REQUEST,\r\n  REQUEST_CHECK_SUCCESS,\r\n  REQUEST_CHECK_FAIL,\r\n} from '../constants/requestConstants'\r\n\r\nexport const createRequest = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: REQUEST_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/requests`, product, user, config)\r\n\r\n    dispatch({\r\n      type: REQUEST_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    dispatch({\r\n      type: REQUEST_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const checkRequested = (productID, userID) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: REQUEST_CHECK_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `/api/requests`,\r\n      { productID },\r\n      userID,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: REQUEST_CHECK_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    dispatch({\r\n      type: REQUEST_CHECK_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}