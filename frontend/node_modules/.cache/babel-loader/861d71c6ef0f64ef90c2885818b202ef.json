{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ed\\\\Desktop\\\\Websites\\\\NeonMegShop\\\\frontend\\\\src\\\\screens\\\\PaymentScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport Meta from '../components/Meta';\nimport { updateBilling } from '../actions/orderActions';\nimport { Elements } from '@stripe/react-stripe-js';\nimport PaymentForm from '../components/PaymentForm';\nimport { getOrderDetails } from '../actions/orderActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { ORDER_CHARGE_RESET } from '../constants/orderConstants';\nimport { payOrder } from '../actions/orderActions';\nimport { stripePromise } from '../constants/stripeConstants';\nimport { updateProduct } from '../actions/productActions';\n\nconst PaymentScreen = ({\n  match,\n  history\n}) => {\n  // Assign useDispatch hook to dispatch actions\n  const dispatch = useDispatch(); // get the orderID from th URL\n\n  const orderId = match.params.id; // Go to the state and pull out information from userLogin\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // Go to the orderDetails in the state and pull out information\n\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderCharge = useSelector(state => state.orderCharge);\n  const {\n    loading: chargeLoading,\n    success: chargeSuccess\n  } = orderCharge; // Declare new state variables and functions\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [city, setCity] = useState('');\n  const [street, setStreet] = useState('');\n  const [state, setState] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const billingDetails = {\n    name: firstName + ' ' + lastName,\n    email: userInfo.email,\n    address: {\n      city: city,\n      line1: street,\n      state: state,\n      postal_code: postalCode\n    }\n  }; // Function to place order on submit\n\n  const updateBillingInfo = () => {\n    dispatch(updateBilling(orderId, billingDetails));\n  }; // useEffect hook to do something after render\n\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n\n    if (!order) {\n      dispatch(getOrderDetails(orderId));\n    }\n\n    if (order) {\n      if (order.isPaid) {\n        history.push(`/order/${orderId}`);\n      }\n    }\n\n    if (chargeSuccess) {\n      history.push(`/order/${orderId}`);\n      dispatch({\n        type: ORDER_CHARGE_RESET\n      });\n      dispatch(payOrder(orderId));\n      order.orderItems.map(product => console.log(product._id, product.qty));\n    }\n  }, [dispatch, orderId, order, history, userInfo, chargeSuccess]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Elements, {\n    stripe: stripePromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), loading || chargeLoading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, error) : order.isPaid ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"AlreadyPaid\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Meta, {\n    title: \"Shipping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CheckoutSteps, {\n    step1: true,\n    step2: true,\n    step3: true,\n    step4: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Payment\")), /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    id: \"payment-form\",\n    onSubmit: updateBillingInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    sm: 12,\n    lg: 12,\n    md: 1,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"first name\",\n    as: Col,\n    sm: 6,\n    md: 12,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"First Name\",\n    value: firstName,\n    required: true,\n    onChange: e => setFirstName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"last name\",\n    as: Col,\n    sm: 6,\n    md: 12,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Last Name\",\n    value: lastName,\n    required: true,\n    onChange: e => setLastName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"city\",\n    as: Col,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"City\",\n    value: city,\n    required: true,\n    onChange: e => setCity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"street\",\n    as: Col,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, \"Street\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"street\",\n    value: street,\n    required: true,\n    onChange: e => setStreet(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"state\",\n    as: Col,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"state\",\n    value: state,\n    required: true,\n    onChange: e => setState(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"zip code\",\n    as: Col,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"zip\",\n    value: postalCode,\n    required: true,\n    onChange: e => setPostalCode(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Elements, {\n    stripe: stripePromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PaymentForm, {\n    billingDetails: billingDetails,\n    updateBillingInfo: updateBillingInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default PaymentScreen;","map":{"version":3,"sources":["C:/Users/Ed/Desktop/Websites/NeonMegShop/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","useEffect","Form","Col","Row","useDispatch","useSelector","FormContainer","CheckoutSteps","Meta","updateBilling","Elements","PaymentForm","getOrderDetails","Message","Loader","ORDER_CHARGE_RESET","payOrder","stripePromise","updateProduct","PaymentScreen","match","history","dispatch","orderId","params","id","userLogin","state","userInfo","orderDetails","order","loading","error","orderCharge","chargeLoading","success","chargeSuccess","firstName","setFirstName","lastName","setLastName","city","setCity","street","setStreet","setState","postalCode","setPostalCode","billingDetails","name","email","address","line1","postal_code","updateBillingInfo","push","isPaid","type","orderItems","map","product","console","log","_id","qty","textAlign","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Form, Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport Meta from '../components/Meta'\r\nimport { updateBilling } from '../actions/orderActions'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport PaymentForm from '../components/PaymentForm'\r\nimport { getOrderDetails } from '../actions/orderActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { ORDER_CHARGE_RESET } from '../constants/orderConstants'\r\nimport { payOrder } from '../actions/orderActions'\r\nimport { stripePromise } from '../constants/stripeConstants'\r\nimport { updateProduct } from '../actions/productActions'\r\n\r\nconst PaymentScreen = ({ match, history }) => {\r\n  // Assign useDispatch hook to dispatch actions\r\n  const dispatch = useDispatch()\r\n\r\n  // get the orderID from th URL\r\n  const orderId = match.params.id\r\n\r\n  // Go to the state and pull out information from userLogin\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  // Go to the orderDetails in the state and pull out information\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderCharge = useSelector((state) => state.orderCharge)\r\n  const { loading: chargeLoading, success: chargeSuccess } = orderCharge\r\n\r\n  // Declare new state variables and functions\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [city, setCity] = useState('')\r\n  const [street, setStreet] = useState('')\r\n  const [state, setState] = useState('')\r\n  const [postalCode, setPostalCode] = useState('')\r\n\r\n  const billingDetails = {\r\n    name: firstName + ' ' + lastName,\r\n    email: userInfo.email,\r\n    address: {\r\n      city: city,\r\n      line1: street,\r\n      state: state,\r\n      postal_code: postalCode,\r\n    },\r\n  }\r\n\r\n  // Function to place order on submit\r\n  const updateBillingInfo = () => {\r\n    dispatch(updateBilling(orderId, billingDetails))\r\n  }\r\n\r\n  // useEffect hook to do something after render\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    if (!order) {\r\n      dispatch(getOrderDetails(orderId))\r\n    }\r\n    if (order) {\r\n      if (order.isPaid) {\r\n        history.push(`/order/${orderId}`)\r\n      }\r\n    }\r\n    if (chargeSuccess) {\r\n      history.push(`/order/${orderId}`)\r\n      dispatch({ type: ORDER_CHARGE_RESET })\r\n      dispatch(payOrder(orderId))\r\n      order.orderItems.map((product) => console.log(product._id, product.qty))\r\n    }\r\n  }, [dispatch, orderId, order, history, userInfo, chargeSuccess])\r\n\r\n  return (\r\n    <div className='content'>\r\n      <Elements stripe={stripePromise}></Elements>\r\n      {loading || chargeLoading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : order.isPaid ? (\r\n        <Message variant='danger'>AlreadyPaid</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title='Shipping' />\r\n          <CheckoutSteps step1 step2 step3 step4 />\r\n          <div style={{ textAlign: 'center' }}>\r\n            <h1>Payment</h1>\r\n          </div>\r\n\r\n          <FormContainer>\r\n            <Form id='payment-form' onSubmit={updateBillingInfo}>\r\n              <Row sm={12} lg={12} md={1} xl={12}>\r\n                <Form.Group\r\n                  controlId='first name'\r\n                  as={Col}\r\n                  sm={6}\r\n                  md={12}\r\n                  xl={6}\r\n                >\r\n                  <Form.Label>First Name</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='First Name'\r\n                    value={firstName}\r\n                    required\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group\r\n                  controlId='last name'\r\n                  as={Col}\r\n                  sm={6}\r\n                  md={12}\r\n                  xl={6}\r\n                >\r\n                  <Form.Label>Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Last Name'\r\n                    value={lastName}\r\n                    required\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Form.Group controlId='city' as={Col} sm={6}>\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='City'\r\n                    value={city}\r\n                    required\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='street' as={Col} sm={6}>\r\n                  <Form.Label>Street</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='street'\r\n                    value={street}\r\n                    required\r\n                    onChange={(e) => setStreet(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Form.Group controlId='state' as={Col} sm={6}>\r\n                  <Form.Label>State</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='state'\r\n                    value={state}\r\n                    required\r\n                    onChange={(e) => setState(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='zip code' as={Col} sm={6}>\r\n                  <Form.Label>Zip Code</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='zip'\r\n                    value={postalCode}\r\n                    required\r\n                    onChange={(e) => setPostalCode(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Row>\r\n              <Elements stripe={stripePromise}>\r\n                <PaymentForm\r\n                  billingDetails={billingDetails}\r\n                  updateBillingInfo={updateBillingInfo}\r\n                />\r\n              </Elements>\r\n            </Form>\r\n          </FormContainer>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n"]},"metadata":{},"sourceType":"module"}