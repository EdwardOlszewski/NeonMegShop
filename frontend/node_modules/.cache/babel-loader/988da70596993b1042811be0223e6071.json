{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ed\\\\Desktop\\\\Websites\\\\NeonMegShop\\\\frontend\\\\src\\\\components\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cardCharge } from '../actions/orderActions';\nimport Loader from '../components/Loader';\n\nconst PaymentForm = ({\n  updateBillingInfo,\n  billingDetails,\n  history\n}) => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const dispatch = useDispatch();\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order\n  } = orderDetails;\n  const orderCharge = useSelector(state => state.orderCharge);\n  const {\n    loading\n  } = orderCharge;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: billingDetails\n    });\n\n    if (!error) {\n      const {\n        id\n      } = paymentMethod;\n      var amount = parseInt(order.totalPrice * 100);\n      dispatch(cardCharge(id, amount, order._id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Card Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"card-element\",\n    className: \"form-control\",\n    style: {\n      paddingTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: '2rem'\n    },\n    type: \"submit\",\n    onClick: () => updateBillingInfo(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Submit Payment\"));\n};\n\n_s(PaymentForm, \"nVHbkXMpLZCGTVusfWWWNO2EGl8=\", false, function () {\n  return [useStripe, useElements, useDispatch, useSelector, useSelector];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/Ed/Desktop/Websites/NeonMegShop/frontend/src/components/PaymentForm.js"],"names":["React","Form","Button","CardElement","useStripe","useElements","useSelector","useDispatch","cardCharge","Loader","PaymentForm","updateBillingInfo","billingDetails","history","stripe","elements","dispatch","orderDetails","state","order","orderCharge","loading","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","billing_details","id","amount","parseInt","totalPrice","_id","paddingTop","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,iBAAF;AAAqBC,EAAAA,cAArB;AAAqCC,EAAAA;AAArC,CAAD,KAAoD;AAAA;;AACtE,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,YAAY,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAYF,YAAlB;AAEA,QAAMG,WAAW,GAAGd,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACE,WAAlB,CAA/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcD,WAApB;;AAEA,QAAME,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,MAAMZ,MAAM,CAACa,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAEd,QAAQ,CAACe,UAAT,CAAoB3B,WAApB,CAF0D;AAGhE4B,MAAAA,eAAe,EAAEnB;AAH+C,KAA3B,CAAvC;;AAMA,QAAI,CAACa,KAAL,EAAY;AACV,YAAM;AAAEO,QAAAA;AAAF,UAASN,aAAf;AACA,UAAIO,MAAM,GAAGC,QAAQ,CAACf,KAAK,CAACgB,UAAN,GAAmB,GAApB,CAArB;AACAnB,MAAAA,QAAQ,CAACR,UAAU,CAACwB,EAAD,EAAKC,MAAL,EAAad,KAAK,CAACiB,GAAnB,CAAX,CAAR;AACD;AACF,GAbD;;AAeA,sBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,cAAT;AAAwB,IAAA,QAAQ,EAAEd,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,KAAK,EAAE;AAAEe,MAAAA,UAAU,EAAE;AAAd,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF,EASGhB,OAAO,gBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAGN,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEiB,MAAAA,SAAS,EAAE;AAAb,KADT;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAE,MAAM3B,iBAAiB,EAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZJ,CADF;AAuBD,CAjDD;;GAAMD,W;UACWN,S,EACEC,W,EACAE,W,EAEID,W,EAGDA,W;;;KARhBI,W;AAmDN,eAAeA,WAAf","sourcesContent":["import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { cardCharge } from '../actions/orderActions'\r\nimport Loader from '../components/Loader'\r\n\r\nconst PaymentForm = ({ updateBillingInfo, billingDetails, history }) => {\r\n  const stripe = useStripe()\r\n  const elements = useElements()\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order } = orderDetails\r\n\r\n  const orderCharge = useSelector((state) => state.orderCharge)\r\n  const { loading } = orderCharge\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n      billing_details: billingDetails,\r\n    })\r\n\r\n    if (!error) {\r\n      const { id } = paymentMethod\r\n      var amount = parseInt(order.totalPrice * 100)\r\n      dispatch(cardCharge(id, amount, order._id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form id='payment-form' onSubmit={handleSubmit}>\r\n      <Form.Label>Card Number</Form.Label>\r\n      <div\r\n        id='card-element'\r\n        className='form-control'\r\n        style={{ paddingTop: '1rem' }}\r\n      >\r\n        <CardElement />\r\n      </div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Button\r\n          style={{ marginTop: '2rem' }}\r\n          type='submit'\r\n          onClick={() => updateBillingInfo()}\r\n        >\r\n          Submit Payment\r\n        </Button>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PaymentForm\r\n"]},"metadata":{},"sourceType":"module"}